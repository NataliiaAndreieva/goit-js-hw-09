{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BA8BpC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CArCba,QAAQC,IAAI,OAAQlB,GAEpBA,EAAKC,KAAKkB,iBAAiB,UAE3B,SAA+BC,GAC7BA,EAAEC,iBAEF,MAAMC,EAAQC,OAAOH,EAAEI,cAAcC,SAASrB,MAAMsB,OAC9CrB,EAAOkB,OAAOH,EAAEI,cAAcC,SAASpB,KAAKqB,OAC5CpB,EAASiB,OAAOH,EAAEI,cAAcC,SAASnB,OAAOoB,OAEtD,IAAK,IAAIC,EAAI,EAAGA,GAAKrB,EAAQqB,GAAK,EAAG,CACnC,IAAIC,EAAaN,EAAQjB,GAAQsB,EAAI,GACrCV,QAAQC,IAAIU,GAEZpB,EAAcmB,EAAGC,GACdC,MAAK,EAACpB,SAAEA,EAAQL,MAAEA,MACjBN,EAAAgC,OAAOC,QAAQ,qBAAqBtB,QAAeL,OACnDa,QAAQC,IAAI,uBAAqBT,QAAiBL,MAAU,IAE7D4B,OAAM,EAACvB,SAAEA,EAAQL,MAAEA,MAClBN,EAAAgC,OAAOG,QAAQ,oBAAoBxB,QAAeL,OAClDa,QAAQC,IAAI,sBAAoBT,QAAeL,MAAU,G,CAG/DgB,EAAEI,cAAcU,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\nconsole.log('refs', refs);\n\nrefs.form.addEventListener('submit', onClickCreatePromises);\n\nfunction onClickCreatePromises(e) {\n  e.preventDefault();\n \n  const delay = Number(e.currentTarget.elements.delay.value);\n  const step = Number(e.currentTarget.elements.step.value);\n  const amount = Number(e.currentTarget.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let totalDelay = delay + step * (i - 1);\n    console.log(totalDelay);\n\n    createPromise(i, totalDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","btnSubmit","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","e","preventDefault","delay1","Number","currentTarget","elements","value","i","totalDelay","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.d1a54fe5.js.map"}